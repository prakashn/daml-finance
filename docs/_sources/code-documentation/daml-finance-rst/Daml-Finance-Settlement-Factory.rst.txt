.. Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
.. SPDX-License-Identifier: Apache-2.0

.. _module-daml-finance-settlement-factory-257:

Module Daml.Finance.Settlement.Factory
======================================

Templates
---------

.. _type-daml-finance-settlement-factory-factory-53518:

**template** `Factory <type-daml-finance-settlement-factory-factory-53518_>`_

  Factory template that implements the ``Factory`` interface and is used to create a settlement batch\.
  A batch is made of a set of ``Instruction``\\s, as well as a container template used to atomically settle them\.
  
  .. list-table::
     :widths: 15 10 30
     :header-rows: 1
  
     * - Field
       - Type
       - Description
     * - provider
       - `Party <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-party-57932>`_
       - Party providing the facility to create settlement instructions\.
     * - observers
       - :ref:`Parties <type-daml-finance-interface-types-common-parties-68320>`
       - Observers\.
  
  + **Choice Archive**
    

.. _type-daml-finance-settlement-factory-factorywithintermediaries-72365:

**template** `FactoryWithIntermediaries <type-daml-finance-settlement-factory-factorywithintermediaries-72365_>`_

  Factory template that implements the ``Factory`` interface and is used to create a settlement batch\.
  A batch is made of a set of ``Instruction``\\s, as well as a container template used to atomically settle them\.
  For each instrument to settle as part of the batch, a hierarchy of intermediaries is specified in ``paths``\. This hierarchy is used to generate settlement instructions\.
  
  .. list-table::
     :widths: 15 10 30
     :header-rows: 1
  
     * - Field
       - Type
       - Description
     * - provider
       - `Party <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-party-57932>`_
       - Party providing the facility to create settlement instructions\.
     * - observers
       - :ref:`Parties <type-daml-finance-interface-types-common-parties-68320>`
       - Observers\.
     * - paths
       - `Map <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-map-90052>`_ `Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_ `Path <type-daml-finance-settlement-factory-path-70278_>`_
       - Hierarchical paths used to settle holding transfers\. A path is specified for each instrument label\.
  
  + **Choice Archive**
    

Data Types
----------

.. _type-daml-finance-settlement-factory-path-70278:

**data** `Path <type-daml-finance-settlement-factory-path-70278_>`_

  Data type that describes a hierarchical account structure between two parties for holdings on an instrument\.
  
  .. _constr-daml-finance-settlement-factory-path-19123:
  
  `Path <constr-daml-finance-settlement-factory-path-19123_>`_
  
    .. list-table::
       :widths: 15 10 30
       :header-rows: 1
    
       * - Field
         - Type
         - Description
       * - senderPath
         - \[`Party <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-party-57932>`_\]
         - Path from the sender to the root custodian of the holding\. If the sender ``p`` is the root custodian, it should be ``[p, p]``\.
       * - receiverPath
         - \[`Party <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-party-57932>`_\]
         - Path from the receiver to the root custodian of the holding\. If the receiver ``p`` is the root custodian, it should be ``[p, p]``\.
  
  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `Path <type-daml-finance-settlement-factory-path-70278_>`_
  
  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `Path <type-daml-finance-settlement-factory-path-70278_>`_
