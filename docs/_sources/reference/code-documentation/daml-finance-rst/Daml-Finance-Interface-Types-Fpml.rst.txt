.. Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
.. SPDX-License-Identifier: Apache-2.0

.. _module-daml-finance-interface-types-fpml-66405:

Module Daml.Finance.Interface.Types.Fpml
========================================

Data Types
----------

.. _type-daml-finance-interface-types-fpml-calculation-4299:

**data** `Calculation <type-daml-finance-interface-types-fpml-calculation-4299_>`_

  The parameters used in the calculation of fixed or floating rate period amounts\.

  .. _constr-daml-finance-interface-types-fpml-calculation-18276:

  `Calculation <constr-daml-finance-interface-types-fpml-calculation-18276_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - notionalSchedule
         - `NotionalSchedule <type-daml-finance-interface-types-fpml-notionalschedule-32412_>`_
         -
       * - floatingRateCalculation
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `FloatingRateCalculation <type-daml-finance-interface-types-fpml-floatingratecalculation-36179_>`_
         -
       * - fixedRateSchedule
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `FixedRateSchedule <type-daml-finance-interface-types-fpml-fixedrateschedule-74637_>`_
         -
       * - dayCountFraction
         - :ref:`DayCountConventionEnum <type-daml-finance-interface-types-date-daycount-daycountconventionenum-67281>`
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `Calculation <type-daml-finance-interface-types-fpml-calculation-4299_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `Calculation <type-daml-finance-interface-types-fpml-calculation-4299_>`_

.. _type-daml-finance-interface-types-fpml-calculationperiodamount-83216:

**data** `CalculationPeriodAmount <type-daml-finance-interface-types-fpml-calculationperiodamount-83216_>`_

  The calculation period amount parameters\.

  .. _constr-daml-finance-interface-types-fpml-calculationperiodamount-65511:

  `CalculationPeriodAmount <constr-daml-finance-interface-types-fpml-calculationperiodamount-65511_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - calculation
         - `Calculation <type-daml-finance-interface-types-fpml-calculation-4299_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `CalculationPeriodAmount <type-daml-finance-interface-types-fpml-calculationperiodamount-83216_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `CalculationPeriodAmount <type-daml-finance-interface-types-fpml-calculationperiodamount-83216_>`_

.. _type-daml-finance-interface-types-fpml-calculationperioddates-60238:

**data** `CalculationPeriodDates <type-daml-finance-interface-types-fpml-calculationperioddates-60238_>`_

  The calculation periods dates schedule\.

  .. _constr-daml-finance-interface-types-fpml-calculationperioddates-43215:

  `CalculationPeriodDates <constr-daml-finance-interface-types-fpml-calculationperioddates-43215_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - effectiveDate
         - `Date <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-date-32253>`_
         -
       * - terminationDate
         - `Date <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-date-32253>`_
         -
       * - calculationPeriodDatesAdjustments
         - `CalculationPeriodDatesAdjustments <type-daml-finance-interface-types-fpml-calculationperioddatesadjustments-39191_>`_
         -
       * - firstRegularPeriodStartDate
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `Date <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-date-32253>`_
         -
       * - lastRegularPeriodEndDate
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `Date <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-lf-date-32253>`_
         -
       * - calculationPeriodFrequency
         - `CalculationPeriodFrequency <type-daml-finance-interface-types-fpml-calculationperiodfrequency-98627_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `CalculationPeriodDates <type-daml-finance-interface-types-fpml-calculationperioddates-60238_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `CalculationPeriodDates <type-daml-finance-interface-types-fpml-calculationperioddates-60238_>`_

.. _type-daml-finance-interface-types-fpml-calculationperioddatesadjustments-39191:

**data** `CalculationPeriodDatesAdjustments <type-daml-finance-interface-types-fpml-calculationperioddatesadjustments-39191_>`_

  The business day convention to apply to each calculation period end date if it would otherwise fall on a day that is not a business day in the specified financial business centers\.

  .. _constr-daml-finance-interface-types-fpml-calculationperioddatesadjustments-66760:

  `CalculationPeriodDatesAdjustments <constr-daml-finance-interface-types-fpml-calculationperioddatesadjustments-66760_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - businessDayConvention
         - :ref:`BusinessDayConventionEnum <type-daml-finance-interface-types-date-calendar-businessdayconventionenum-88986>`
         -
       * - businessCenters
         - \[`Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_\]
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `CalculationPeriodDatesAdjustments <type-daml-finance-interface-types-fpml-calculationperioddatesadjustments-39191_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `CalculationPeriodDatesAdjustments <type-daml-finance-interface-types-fpml-calculationperioddatesadjustments-39191_>`_

.. _type-daml-finance-interface-types-fpml-calculationperiodfrequency-98627:

**data** `CalculationPeriodFrequency <type-daml-finance-interface-types-fpml-calculationperiodfrequency-98627_>`_

  A type defining the frequency at which calculation
  period end dates occur within the regular part of the
  calculation period schedule and thier roll date
  convention\. In case the calculation frequency is of
  value T (term), the period is defined by the
  swap\\swapStream\\calculationPerioDates\\effectiveDate
  and the
  swap\\swapStream\\calculationPerioDates\\terminationDate\.

  .. _constr-daml-finance-interface-types-fpml-calculationperiodfrequency-44742:

  `CalculationPeriodFrequency <constr-daml-finance-interface-types-fpml-calculationperiodfrequency-44742_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - periodMultiplier
         - `Int <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-int-37261>`_
         - A time period multiplier, e\.g\. 1, 2 or 3 etc\. If the period value is T (Term) then periodMultiplier must contain the value 1\.
       * - period
         - :ref:`PeriodEnum <type-daml-finance-interface-types-date-rollconvention-periodenum-51659>`
         - A time period, e\.g\. a day, week, month, year or term of the stream\.
       * - rollConvention
         - :ref:`RollConventionEnum <type-daml-finance-interface-types-date-rollconvention-rollconventionenum-73360>`
         - Used in conjunction with a frequency and the regular period start date of a calculation period, determines each calculation period end date within the regular part of a calculation period schedule\.

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `CalculationPeriodFrequency <type-daml-finance-interface-types-fpml-calculationperiodfrequency-98627_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `CalculationPeriodFrequency <type-daml-finance-interface-types-fpml-calculationperiodfrequency-98627_>`_

.. _type-daml-finance-interface-types-fpml-daytypeenum-19293:

**data** `DayTypeEnum <type-daml-finance-interface-types-fpml-daytypeenum-19293_>`_

  A day type classification used in counting the number
  of days between two dates\.

  .. _constr-daml-finance-interface-types-fpml-business-82408:

  `Business <constr-daml-finance-interface-types-fpml-business-82408_>`_

    When calculating the number of days between two dates
    the count includes only business days\.

  .. _constr-daml-finance-interface-types-fpml-calendar-95644:

  `Calendar <constr-daml-finance-interface-types-fpml-calendar-95644_>`_

    When calculating the number of days between two dates
    the count includes all calendar days\.

  .. _constr-daml-finance-interface-types-fpml-commoditybusiness-17376:

  `CommodityBusiness <constr-daml-finance-interface-types-fpml-commoditybusiness-17376_>`_

    When calculating the number of days between two dates
    the count includes only commodity business days\.

  .. _constr-daml-finance-interface-types-fpml-currencybusiness-95013:

  `CurrencyBusiness <constr-daml-finance-interface-types-fpml-currencybusiness-95013_>`_

    When calculating the number of days between two dates
    the count includes only currency business days\.

  .. _constr-daml-finance-interface-types-fpml-exchangebusiness-54871:

  `ExchangeBusiness <constr-daml-finance-interface-types-fpml-exchangebusiness-54871_>`_

    When calculating the number of days between two dates
    the count includes only stock exchange business days\.

  .. _constr-daml-finance-interface-types-fpml-scheduledtradingday-44141:

  `ScheduledTradingDay <constr-daml-finance-interface-types-fpml-scheduledtradingday-44141_>`_

    When calculating the number of days between two dates
    the count includes only scheduled trading days\.

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `DayTypeEnum <type-daml-finance-interface-types-fpml-daytypeenum-19293_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `DayTypeEnum <type-daml-finance-interface-types-fpml-daytypeenum-19293_>`_

.. _type-daml-finance-interface-types-fpml-fixedrateschedule-74637:

**data** `FixedRateSchedule <type-daml-finance-interface-types-fpml-fixedrateschedule-74637_>`_

  Specify the fixed rate

  .. _constr-daml-finance-interface-types-fpml-fixedrateschedule-62278:

  `FixedRateSchedule <constr-daml-finance-interface-types-fpml-fixedrateschedule-62278_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - initialValue
         - `Decimal <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-decimal-18135>`_
         - The initial rate or amount, as the case may be\. An initial rate of 5% would be represented as 0\.05\. step \: \[Step\] \^ The schedule of step date and value pairs\. On each step date the associated step value becomes effective A list of steps may be ordered in the document by ascending step date\. An FpML document containing an unordered list of steps is still regarded as a conformant document\. type\_ \: Optional SpreadScheduleType

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `FixedRateSchedule <type-daml-finance-interface-types-fpml-fixedrateschedule-74637_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `FixedRateSchedule <type-daml-finance-interface-types-fpml-fixedrateschedule-74637_>`_

.. _type-daml-finance-interface-types-fpml-fixingdates-75150:

**data** `FixingDates <type-daml-finance-interface-types-fpml-fixingdates-75150_>`_

  Specifies the fixing date relative to the reset date in terms of a business days offset and an associated set of financial business centers\.

  .. _constr-daml-finance-interface-types-fpml-fixingdates-54037:

  `FixingDates <constr-daml-finance-interface-types-fpml-fixingdates-54037_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - periodMultiplier
         - `Int <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-int-37261>`_
         -
       * - period
         - :ref:`PeriodEnum <type-daml-finance-interface-types-date-rollconvention-periodenum-51659>`
         -
       * - dayType
         - `DayTypeEnum <type-daml-finance-interface-types-fpml-daytypeenum-19293_>`_
         -
       * - businessDayConvention
         - :ref:`BusinessDayConventionEnum <type-daml-finance-interface-types-date-calendar-businessdayconventionenum-88986>`
         -
       * - businessCenters
         - \[`Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_\]
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `FixingDates <type-daml-finance-interface-types-fpml-fixingdates-75150_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `FixingDates <type-daml-finance-interface-types-fpml-fixingdates-75150_>`_

.. _type-daml-finance-interface-types-fpml-floatingratecalculation-36179:

**data** `FloatingRateCalculation <type-daml-finance-interface-types-fpml-floatingratecalculation-36179_>`_

  A type defining the floating rate and definitions
  relating to the calculation of floating rate amounts\.

  .. _constr-daml-finance-interface-types-fpml-floatingratecalculation-30056:

  `FloatingRateCalculation <constr-daml-finance-interface-types-fpml-floatingratecalculation-30056_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - floatingRateIndex
         - `Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_
         -
       * - indexTenor
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ :ref:`Period <type-daml-finance-interface-types-date-rollconvention-period-21180>`
         - The ISDA Designated Maturity, i\.e\. the tenor of the floating rate\. floatingRateMultiplierSchedule \: Optional Schedule \^ A rate multiplier or multiplier schedule to apply to the floating rate\. A multiplier schedule is expressed as explicit multipliers and dates\. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in the calculationPeriodDatesAdjustments\. The multiplier can be a positive or negative decimal\. This element should only be included if the multiplier is not equal to 1 (one) for the term of the stream\. spreadSchedule \: \[SpreadSchedule\]
       * - spreadSchedule
         - `SpreadSchedule <type-daml-finance-interface-types-fpml-spreadschedule-94683_>`_
         - The ISDA Spread or a Spread schedule expressed as explicit spreads and dates\. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments\. The spread is a per annum rate, expressed as a decimal\. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate\. A positive 10 basis point (0\.1%) spread would be represented as 0\.001\. rateTreatment \: Optional RateTreatmentEnum \^ The specification of any rate conversion which needs to be applied to the observed rate before being used in any calculations\. The two common conversions are for securities quoted on a bank discount basis which will need to be converted to either a Money Market Yield or Bond Equivalent Yield\. See the Annex to the 2000 ISDA Definitions, Section 7\.3\. Certain General Definitions Relating to Floating Rate Options, paragraphs (g) and (h) for definitions of these terms\. capRateSchedule \: \[StrikeSchedule\] \^ The cap rate or cap rate schedule, if any, which applies to the floating rate\. The cap rate (strike) is only required where the floating rate on a swap stream is capped at a certain level\. A cap rate schedule is expressed as explicit cap rates and dates and the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments\. The cap rate is assumed to be exclusive of any spread and is a per annum rate, expressed as a decimal\. A cap rate of 5% would be represented as 0\.05\. floorRateSchedule \: \[StrikeSchedule\] \^ The floor rate or floor rate schedule, if any, which applies to the floating rate\. The floor rate (strike) is only required where the floating rate on a swap stream is floored at a certain strike level\. A floor rate schedule is expressed as explicit floor rates and dates and the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments\. The floor rate is assumed to be exclusive of any spread and is a per annum rate, expressed as a decimal\. A floor rate of 5% would be represented as 0\.05\. initialRate \: Optional Decimal \^ The initial floating rate reset agreed between the principal parties involved in the trade\. This is assumed to be the first required reset rate for the first regular calculation period\. It should only be included when the rate is not equal to the rate published on the source implied by the floating rate index\. An initial rate of 5% would be represented as 0\.05\. finalRateRounding \: Optional Rounding \^ The rounding convention to apply to the final rate used in determination of a calculation period amount\. averagingMethod \: Optional AveragingMethodEnum \^ If averaging is applicable, this component specifies whether a weighted or unweighted average method of calculation is to be used\. The component must only be included when averaging applies\. negativeInterestRateTreatment \: Optional NegativeInterestRateTreatmentEnum \^ The specification of any provisions for calculating payment obligations when a floating rate is negative (either due to a quoted negative floating rate or by operation of a spread that is subtracted from the floating rate)\.

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `FloatingRateCalculation <type-daml-finance-interface-types-fpml-floatingratecalculation-36179_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `FloatingRateCalculation <type-daml-finance-interface-types-fpml-floatingratecalculation-36179_>`_

.. _type-daml-finance-interface-types-fpml-notionalschedule-32412:

**data** `NotionalSchedule <type-daml-finance-interface-types-fpml-notionalschedule-32412_>`_

  The notional amount or notional amount schedule\.

  .. _constr-daml-finance-interface-types-fpml-notionalschedule-31041:

  `NotionalSchedule <constr-daml-finance-interface-types-fpml-notionalschedule-31041_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - notionalStepSchedule
         - `NotionalStepSchedule <type-daml-finance-interface-types-fpml-notionalstepschedule-56726_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `NotionalSchedule <type-daml-finance-interface-types-fpml-notionalschedule-32412_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `NotionalSchedule <type-daml-finance-interface-types-fpml-notionalschedule-32412_>`_

.. _type-daml-finance-interface-types-fpml-notionalstepschedule-56726:

**data** `NotionalStepSchedule <type-daml-finance-interface-types-fpml-notionalstepschedule-56726_>`_

  The notional amount or notional amount schedule expressed as explicit outstanding notional amounts and dates\.
  Currently, only an initial value is supported, which corresponds to a fix notional (of each leg, individually)\.

  .. _constr-daml-finance-interface-types-fpml-notionalstepschedule-15359:

  `NotionalStepSchedule <constr-daml-finance-interface-types-fpml-notionalstepschedule-15359_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - initialValue
         - `Decimal <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-decimal-18135>`_
         -
       * - currency
         - `Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `NotionalStepSchedule <type-daml-finance-interface-types-fpml-notionalstepschedule-56726_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `NotionalStepSchedule <type-daml-finance-interface-types-fpml-notionalstepschedule-56726_>`_

.. _type-daml-finance-interface-types-fpml-resetdates-76649:

**data** `ResetDates <type-daml-finance-interface-types-fpml-resetdates-76649_>`_

  The reset dates schedule\. This only applies for a floating rate stream\.

  .. _constr-daml-finance-interface-types-fpml-resetdates-51780:

  `ResetDates <constr-daml-finance-interface-types-fpml-resetdates-51780_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - resetRelativeTo
         - `ResetRelativeToEnum <type-daml-finance-interface-types-fpml-resetrelativetoenum-36193_>`_
         -
       * - fixingDates
         - `FixingDates <type-daml-finance-interface-types-fpml-fixingdates-75150_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `ResetDates <type-daml-finance-interface-types-fpml-resetdates-76649_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `ResetDates <type-daml-finance-interface-types-fpml-resetdates-76649_>`_

.. _type-daml-finance-interface-types-fpml-resetfrequency-8884:

**data** `ResetFrequency <type-daml-finance-interface-types-fpml-resetfrequency-8884_>`_

  The frequency at which reset dates occur\.

  .. _constr-daml-finance-interface-types-fpml-resetfrequency-20741:

  `ResetFrequency <constr-daml-finance-interface-types-fpml-resetfrequency-20741_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - periodMultiplier
         - `Int <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-int-37261>`_
         -
       * - period
         - :ref:`PeriodEnum <type-daml-finance-interface-types-date-rollconvention-periodenum-51659>`
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `ResetFrequency <type-daml-finance-interface-types-fpml-resetfrequency-8884_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `ResetFrequency <type-daml-finance-interface-types-fpml-resetfrequency-8884_>`_

.. _type-daml-finance-interface-types-fpml-resetrelativetoenum-36193:

**data** `ResetRelativeToEnum <type-daml-finance-interface-types-fpml-resetrelativetoenum-36193_>`_

  The specification of whether resets occur relative to
  the first or last day of a calculation period\.

  .. _constr-daml-finance-interface-types-fpml-calculationperiodstartdate-39112:

  `CalculationPeriodStartDate <constr-daml-finance-interface-types-fpml-calculationperiodstartdate-39112_>`_

    Resets will occur relative to the first day of each
    calculation period\.

  .. _constr-daml-finance-interface-types-fpml-calculationperiodenddate-69485:

  `CalculationPeriodEndDate <constr-daml-finance-interface-types-fpml-calculationperiodenddate-69485_>`_

    Resets will occur relative to the last day of each
    calculation period\.

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `ResetRelativeToEnum <type-daml-finance-interface-types-fpml-resetrelativetoenum-36193_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `ResetRelativeToEnum <type-daml-finance-interface-types-fpml-resetrelativetoenum-36193_>`_

.. _type-daml-finance-interface-types-fpml-spreadschedule-94683:

**data** `SpreadSchedule <type-daml-finance-interface-types-fpml-spreadschedule-94683_>`_

  Adds an optional spread type element to the Schedule
  to identify a long or short spread value\.

  .. _constr-daml-finance-interface-types-fpml-spreadschedule-7034:

  `SpreadSchedule <constr-daml-finance-interface-types-fpml-spreadschedule-7034_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - initialValue
         - `Decimal <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-decimal-18135>`_
         - The initial rate or amount, as the case may be\. An initial rate of 5% would be represented as 0\.05\. step \: \[Step\] \^ The schedule of step date and value pairs\. On each step date the associated step value becomes effective A list of steps may be ordered in the document by ascending step date\. An FpML document containing an unordered list of steps is still regarded as a conformant document\. type\_ \: Optional SpreadScheduleType

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `SpreadSchedule <type-daml-finance-interface-types-fpml-spreadschedule-94683_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `SpreadSchedule <type-daml-finance-interface-types-fpml-spreadschedule-94683_>`_

.. _type-daml-finance-interface-types-fpml-stubcalculationperiodamount-24100:

**data** `StubCalculationPeriodAmount <type-daml-finance-interface-types-fpml-stubcalculationperiodamount-24100_>`_

  The stub calculation period amount parameters\. This element must only be included if there is an initial or final stub calculation period\. Even then, it must only be included if either the stub references a different floating rate tenor to the regular calculation periods, or if the stub is calculated as a linear interpolation of two different floating rate tenors, or if a specific stub rate or stub amount has been negotiated\.

  .. _constr-daml-finance-interface-types-fpml-stubcalculationperiodamount-73687:

  `StubCalculationPeriodAmount <constr-daml-finance-interface-types-fpml-stubcalculationperiodamount-73687_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - initialStub
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `StubValue <type-daml-finance-interface-types-fpml-stubvalue-73357_>`_
         -
       * - finalStub
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `StubValue <type-daml-finance-interface-types-fpml-stubvalue-73357_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `StubCalculationPeriodAmount <type-daml-finance-interface-types-fpml-stubcalculationperiodamount-24100_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `StubCalculationPeriodAmount <type-daml-finance-interface-types-fpml-stubcalculationperiodamount-24100_>`_

.. _type-daml-finance-interface-types-fpml-stubfloatingrate-53983:

**data** `StubFloatingRate <type-daml-finance-interface-types-fpml-stubfloatingrate-53983_>`_

  The rates to be applied to the initial or final stub may be the linear interpolation of two different rates\.

  .. _constr-daml-finance-interface-types-fpml-stubfloatingrate-55058:

  `StubFloatingRate <constr-daml-finance-interface-types-fpml-stubfloatingrate-55058_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - floatingRateIndex
         - `Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_
         -
       * - indexTenor
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ :ref:`Period <type-daml-finance-interface-types-date-rollconvention-period-21180>`
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `StubFloatingRate <type-daml-finance-interface-types-fpml-stubfloatingrate-53983_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `StubFloatingRate <type-daml-finance-interface-types-fpml-stubfloatingrate-53983_>`_

.. _type-daml-finance-interface-types-fpml-stubvalue-73357:

**data** `StubValue <type-daml-finance-interface-types-fpml-stubvalue-73357_>`_

  Specifies how the stub amount is calculated\. A single floating rate tenor different to that used for the regular part of the calculation periods schedule may be specified, or two floating tenors may be specified\. If two floating rate tenors are specified then Linear Interpolation (in accordance with the 2000 ISDA Definitions, Section 8\.3\. Interpolation) is assumed to apply\. Alternatively, an actual known stub rate or stub amount may be specified\.

  .. _constr-daml-finance-interface-types-fpml-stubvalue-42818:

  `StubValue <constr-daml-finance-interface-types-fpml-stubvalue-42818_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - stubRate
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `Decimal <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-decimal-18135>`_
         -
       * - floatingRate
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ \[`StubFloatingRate <type-daml-finance-interface-types-fpml-stubfloatingrate-53983_>`_\]
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `StubValue <type-daml-finance-interface-types-fpml-stubvalue-73357_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `StubValue <type-daml-finance-interface-types-fpml-stubvalue-73357_>`_

.. _type-daml-finance-interface-types-fpml-swapstream-99592:

**data** `SwapStream <type-daml-finance-interface-types-fpml-swapstream-99592_>`_

  The swap streams, describing each leg of the swap\.

  .. _constr-daml-finance-interface-types-fpml-swapstream-25525:

  `SwapStream <constr-daml-finance-interface-types-fpml-swapstream-25525_>`_

    .. list-table::
       :widths: 15 10 30
       :header-rows: 1

       * - Field
         - Type
         - Description
       * - payerPartyReference
         - `Text <https://docs.daml.com/daml/stdlib/Prelude.html#type-ghc-types-text-51952>`_
         -
       * - calculationPeriodDates
         - `CalculationPeriodDates <type-daml-finance-interface-types-fpml-calculationperioddates-60238_>`_
         -
       * - resetDates
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `ResetDates <type-daml-finance-interface-types-fpml-resetdates-76649_>`_
         -
       * - calculationPeriodAmount
         - `CalculationPeriodAmount <type-daml-finance-interface-types-fpml-calculationperiodamount-83216_>`_
         -
       * - stubCalculationPeriodAmount
         - `Optional <https://docs.daml.com/daml/stdlib/Prelude.html#type-da-internal-prelude-optional-37153>`_ `StubCalculationPeriodAmount <type-daml-finance-interface-types-fpml-stubcalculationperiodamount-24100_>`_
         -

  **instance** `Eq <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-classes-eq-22713>`_ `SwapStream <type-daml-finance-interface-types-fpml-swapstream-99592_>`_

  **instance** `Show <https://docs.daml.com/daml/stdlib/Prelude.html#class-ghc-show-show-65360>`_ `SwapStream <type-daml-finance-interface-types-fpml-swapstream-99592_>`_
